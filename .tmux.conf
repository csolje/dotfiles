# Set prefix to Ctrl-s/space.
unbind C-b
set -g prefix C-s
bind C-s send-prefix
#set -g prefix C-Space

# Bindings:
# - to see current bindings:
#   tmux list-keys
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key M split-window -h "nvim ~/.tmux.conf"

# Open new/split panes with the path of the current pane.
unbind-key c
bind-key c new-window -c '#{pane_current_path}'
unbind-key '%'
bind-key '%' split-window -h -c '#{pane_current_path}'
unbind-key '"'
bind-key '"' split-window -v -c '#{pane_current_path}'

# Vim-like key bindings for pane navigation (default uses cursor keys).
set-window-option -g mode-keys vi
#unbind h
#bind h select-pane -L
#unbind j
#bind j select-pane -D
#unbind k
#bind k select-pane -U
#unbind l # normally used for last-window
#bind l select-pane -R
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# Resizing (mouse also works).
unbind-key Left
bind-key -r Left resize-pane -L 5
unbind-key Right
bind-key -r Right resize-pane -R j
unbind-key Down
bind-key -r Down resize-pane -D 5
unbind-key Up
bind-key -r Up resize-pane -U 5

# Fast toggle between current and last-used window (normally prefix-l).
bind-key ^space last-window

# `^space ^space` is awfully close to the destructive `^space space`, which
# trashes the layout. Providea quick way to get back to the previous-used
# layout.
#
# Normally used for previous-window, but I never use that, prefering numeric
# access.
bind-key p select-layout -o

# Intuitive window-splitting keys.
bind-key '|' split-window -h -c '#{pane_current_path}' # normally prefix-%
bind-key '\' split-window -h -c '#{pane_current_path}' # normally prefix-%
bind-key '-' split-window -v -c '#{pane_current_path}' # normally prefix-"

# Status bar.
set -g status-style 'bg=#373b41, fg=white,bold,italics'
set -g status-left '#[fg=yellow,bold,italics]#S ยง ' # SECTION SIGN (UTF-8: c2 a7)
#set -g status-right "#[fg=yellow,bold,italics]$USER@#h #[fg=magenta]%l:%M %p"
set -g status-right "#[fg=yellow,bold,italics]$USER #[fg=magenta]%l:%M %p"
set -g status-left-length 40
set -g status-right-length 40
set -g status-interval 60 # Default is 15.
#set-option -g status-style 'bg=#373b41,fg=white,bold,italics'
#set-option -g status-left-length 40
#set-option -g status-left '#[fg=yellow,bold,italics]#S ยง ' # SECTION SIGN (UTF-8: c2 a7)
#set-option -g status-right "#[fg=yellow,bold,italics]$USER@#h #[fg=magenta]%l:%M %p"
#set-option -g status-interval 60 # Default is 15.

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set-option -g renumber-windows on

# Highlight active window.
#set-option -w -g window-status-current-bg red

set-option -w -g xterm-keys on

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set-option -w -g main-pane-width 85

set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ',xterm-256color:Tc'

set-option -g history-limit 4096

# Start window and pane numbering at 1, (0 is too hard to reach).
set-option -g base-index 1
#set-option -g pane-base-index 1

# Don't wait for an escape sequence after seeing C-Space.
set-option -s escape-time 20

# Dynamically update iTerm tab and window titles.
set-option -g set-titles on

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set-option -g focus-events on

# But don't change tmux's own window titles.
set-option -w -g automatic-rename off

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set-option -w -g wrap-search off

# - #S = session name
# - #T = pane title (~/.zshrc sets this to the last/current command)
set-option -g set-titles-string "#S > #T"

# Show bells in window titles.
set-option -g window-status-bell-style fg=yellow,bold,underscore

# Turn off distracting border highlight.
set-option -ga pane-active-border-style bg=default,fg=default

# Add : to the default list (" -_@") of word separators.
set-option -ga word-separators :

# Make sure we always start at 1, even when invoked from a .tmux wrapper script.
set-environment -g SHLVL 1
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'dracula/tmux'
set -g @plugin 'christoomey/vim-tmux-navigator'

# dracula customizations
#set -g @dracula-plugins "weather"
#set -g @dracula-fixed-location "Copenhagen"
#set -g @dracula-show-flags true
#set -g @dracula-show-left-icon session
#set -g @dracula-show-powerline true
#set -g @dracula-show-fahrenheit false
set -g status-position top

bind-key -r G run-shell "~/bin/tmux-sessionizer ~/code/work/core-compute-databases"
bind-key -r C run-shell "~/bin/tmux-sessionizer ~/code/work/CloudPlatforms-Install-GNSQL"
#bind-key -r R run-shell "~/bin/tmux-sessionizer ~/work/milo"
# bind-key -r L run-shell "~/.local/bin/tmux-sessionizer ~/work/hpack"
bind-key -r H run-shell "~/bin/tmux-sessionizer ~/code/personal/zmk-config"
bind-key -r T run-shell "~/bin/tmux-sessionizer ~/code/personal/qmk_firmware"
#bind-key -r N run-shell "~/bin/tmux-sessionizer ~/personal/harpoon"
#bind-key -r S run-shell "~/bin/tmux-sessionizer ~/personal/developer-productivity"
# Clipper.
bind-key y run-shell "tmux save-buffer - | nc -U ~/.clipper.sock"

# "copy-pipe" requires tmux >= 1.8
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc -U ~/.clipper.sock"

# Search back to last prompt (mnemonic: "[b]ack").
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "โฏ"\; send-keys -X next-word

bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# Analagous with naked C-l which resets/clears the terminal.
#bind-key C-l clear-history

#source-file -q ~/.tmux-local.conf
run '~/.tmux/plugins/tpm/tpm'
